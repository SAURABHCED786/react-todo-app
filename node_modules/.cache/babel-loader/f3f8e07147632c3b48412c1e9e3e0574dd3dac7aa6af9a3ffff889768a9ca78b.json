{"ast":null,"code":"import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { toPx, tokens, motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { useIsBulkActionsSticky } from '../BulkActions/hooks/use-is-bulk-actions-sticky.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { SelectAllActions } from '../SelectAllActions/SelectAllActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { Text } from '../Text/Text.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase(_ref) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort,\n    paginatedSelectAllActionText,\n    lastColumnSticky = false,\n    sortable,\n    sortDirection,\n    defaultSortDirection = 'descending',\n    sortColumnIndex,\n    onSort,\n    sortToggleLabels,\n    ...restProps\n  } = _ref;\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const loadingElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const {\n    bulkActionsIntersectionRef,\n    tableMeasurerRef,\n    isBulkActionsSticky,\n    bulkActionsAbsoluteOffset,\n    bulkActionsMaxWidth,\n    bulkActionsOffsetLeft,\n    computeTableDimensions\n  } = useIsBulkActionsSticky(selectMode);\n  useEffect(() => {\n    computeTableDimensions();\n  }, [computeTableDimensions, itemCount]);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      var _scrollContainerEleme, _tableElement$current;\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(((_scrollContainerEleme = scrollContainerElement.current) === null || _scrollContainerEleme === void 0 ? void 0 : _scrollContainerEleme.offsetWidth) === ((_tableElement$current = tableElement.current) === null || _tableElement$current === void 0 ? void 0 : _tableElement$current.offsetWidth));\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1; // Don't consider the last column in the calculations if it's not sticky\n\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0; // Secure some space for the remaining columns to be visible\n\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur;\n\n    // hide the scrollbar when resizing\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['duration-100'], 10),\n    nodeRef: loadingElement,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel,\n    ref: loadingElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount;\n  const bulkActionClassNames = classNames(styles.BulkActionsWrapper, isBulkActionsSticky && styles.BulkActionsWrapperSticky);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const bulkActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n    className: bulkActionClassNames,\n    style: {\n      insetBlockStart: isBulkActionsSticky ? undefined : bulkActionsAbsoluteOffset,\n      width: bulkActionsMaxWidth,\n      insetInlineStart: isBulkActionsSticky ? bulkActionsOffsetLeft : undefined\n    }\n  }, /*#__PURE__*/React.createElement(BulkActions, {\n    selectMode: selectMode,\n    promotedActions: promotedActions,\n    actions: actions,\n    onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n    isSticky: isBulkActionsSticky,\n    width: bulkActionsMaxWidth\n  })) : null;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsClassName = classNames(styles.SelectAllActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: selectAllActionsClassName\n    }, /*#__PURE__*/React.createElement(SelectAllActions, {\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction\n    }), loadingMarkup) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableColumnHeader\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = selectAllActionsMarkup !== null && selectAllActionsMarkup !== void 0 ? selectAllActionsMarkup : headerMarkup;\n    return stickyContent;\n  }), bulkActionsMarkup);\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const tableWrapperClassNames = classNames(styles.IndexTableWrapper, Boolean(bulkActionsMarkup) && selectMode && styles.IndexTableWrapperWithBulkActions);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: tableWrapperClassNames,\n    ref: tableMeasurerRef\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), /*#__PURE__*/React.createElement(\"div\", {\n    ref: bulkActionsIntersectionRef\n  })), scrollBarMarkup);\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value === true);\n    const headingContentClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    onSort === null || onSort === void 0 ? void 0 : onSort(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(Text, {\n        variant: \"bodySm\",\n        as: \"span\",\n        visuallyHidden: true\n      }, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n    if (sortable !== null && sortable !== void 0 && sortable[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = defaultSortDirection;\n      let SourceComponent = defaultSortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: styles.TableHeadingSortButton,\n        tabIndex: selectMode ? -1 : 0\n      }, iconMarkup, headingContent);\n      if (!sortToggleLabels || selectMode) {\n        return sortMarkup;\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : defaultSortDirection;\n      const tooltipContent = sortToggleLabels[index][tooltipDirection];\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: tooltipContent,\n        activatorWrapper: \"div\"\n      }, sortMarkup);\n    }\n    return headingContent;\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText !== null && paginatedSelectAllActionText !== void 0 ? paginatedSelectAllActionText : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\nconst isBreakpointsXS = () => {\n  var _toPx;\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat((_toPx = toPx(tokens.breakpoints['breakpoints-sm'])) !== null && _toPx !== void 0 ? _toPx : '');\n};\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable = true,\n    itemCount,\n    selectedItemsCount = 0,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange,\n    ...indexTableBaseProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\nexport { IndexTable };","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","useMemo","SortAscendingMajor","SortDescendingMajor","CSSTransition","toPx","tokens","motion","debounce","useToggle","classNames","styles","IndexProvider","Cell","Row","useIsBulkActionsSticky","SELECT_ALL_ITEMS","SelectionType","getTableHeadingsBySelector","EmptySearchResult","ScrollContainer","BulkActions","SelectAllActions","useIndexValue","useIndexSelectionChange","useI18n","Stack","Checkbox","Spinner","AfterInitialMount","EventListener","Badge","Text","UnstyledButton","Tooltip","Sticky","SCROLL_BAR_PADDING","SCROLL_BAR_DEBOUNCE_PERIOD","IndexTableBase","headings","bulkActions","promotedBulkActions","children","emptyState","sort","paginatedSelectAllActionText","lastColumnSticky","sortable","sortDirection","defaultSortDirection","sortColumnIndex","onSort","sortToggleLabels","restProps","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectMode","selectable","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","condensedListElement","loadingElement","tableInitialized","setTableInitialized","stickyWrapper","setStickyWrapper","hideScrollContainer","setHideScrollContainer","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","firstStickyHeaderElement","stickyHeaderElement","scrollBarElement","scrollContainerElement","scrollingWithBar","scrollingContainer","bulkActionsIntersectionRef","tableMeasurerRef","isBulkActionsSticky","bulkActionsAbsoluteOffset","bulkActionsMaxWidth","bulkActionsOffsetLeft","computeTableDimensions","tableBodyRef","node","handleSelectAllItemsInStore","Page","All","calculateFirstHeaderOffset","current","offsetWidth","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetLeft","length","style","elementStyle","getComputedStyle","boxWidth","minWidth","paddingLeft","paddingRight","forEach","index","isBreakpointsXS","_tableHeadingRects$cu","_tableHeadingRects$cu2","resizeTableScrollBar","_scrollContainerEleme","_tableElement$current","setProperty","debounceResizeTableScrollbar","trailing","canScrollRight","setCanScrollRight","handleCanScrollRight","tableRect","scrollableRect","width","canFitStickyColumn","setCanFitStickyColumn","handleCanFitStickyColumn","checkboxColumnWidth","firstStickyColumnWidth","lastColumnIsNotTheFirst","lastStickyColumnWidth","restOfContentMinWidth","handleResize","_scrollBarElement$cur","handleScrollContainerScroll","canScrollLeft","scrollLeft","handleScrollBarScroll","hasBulkActions","Boolean","headingsMarkup","renderHeading","reduce","acc","concat","bulkActionsSelectable","stickyColumnHeaderStyle","undefined","stickyColumnHeader","createElement","className","TableHeading","key","getHeadingKey","spacing","wrap","alignment","FirstStickyHeaderElement","ref","renderCheckboxContent","renderHeadingContent","stickyHeadingsMarkup","renderStickyHeading","selectedItemsCountLabel","handleTogglePage","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingTransitionClassNames","enter","enterActive","exit","exitActive","loadingMarkup","in","timeout","parseInt","nodeRef","appear","unmountOnExit","LoadingPanel","LoadingPanelRow","size","LoadingPanelText","translate","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowBulkActions","bulkActionClassNames","BulkActionsWrapper","BulkActionsWrapperSticky","shouldShowActions","promotedActions","actions","bulkActionsMarkup","insetBlockStart","insetInlineStart","onSelectModeToggle","handleSelectModeToggle","isSticky","stickyHeaderMarkup","role","boundingElement","stickyHeaderClassNames","StickyTableHeader","selectAllActionsClassName","SelectAllActionsWrapper","selectAllActionsMarkup","label","accessibilityLabel","selected","onToggleAll","headerMarkup","HeaderWrapper","unselectable","StickyTableColumnHeader","StickyTableHeadings","stickyContent","scrollBarWrapperClassNames","ScrollBarContainer","scrollBarContainerCondensed","scrollBarContainerHidden","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onMount","onScroll","ScrollBar","isSortable","some","tableClassNames","Table","disableTextSelection","emptyStateMarkup","title","description","withIllustration","sharedMarkup","Fragment","event","handler","bodyMarkup","CondensedList","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","tableWrapperClassNames","IndexTableWrapper","IndexTableWrapperWithBulkActions","IndexTable","isSecond","isLast","hasSortable","headingContentClassName","hidden","flush","stickyPositioningStyle","headingContent","checkboxClassName","checkboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","handleSortHeadingClick","direction","new","status","variant","as","visuallyHidden","isCurrentlySorted","isAscending","newDirection","SourceComponent","iconMarkup","TableHeadingSortIcon","focusable","TableHeadingSortSvg","sortMarkup","onClick","TableHeadingSortButton","tabIndex","tooltipDirection","tooltipContent","content","activatorWrapper","position","headingStyle","stickyHeadingClassName","customActionText","itemsLength","actionText","onAction","_toPx","window","innerWidth","parseFloat","breakpoints","id","passedResourceName","onSelectionChange","indexTableBaseProps"],"sources":["/home/cedcoss/Desktop/react_training/react-tricks/react-todo-app/node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { toPx, tokens, motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { useIsBulkActionsSticky } from '../BulkActions/hooks/use-is-bulk-actions-sticky.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { SelectAllActions } from '../SelectAllActions/SelectAllActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { Text } from '../Text/Text.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\n\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\n\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort,\n  paginatedSelectAllActionText,\n  lastColumnSticky = false,\n  sortable,\n  sortDirection,\n  defaultSortDirection = 'descending',\n  sortColumnIndex,\n  onSort,\n  sortToggleLabels,\n  ...restProps\n}) {\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const loadingElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const {\n    bulkActionsIntersectionRef,\n    tableMeasurerRef,\n    isBulkActionsSticky,\n    bulkActionsAbsoluteOffset,\n    bulkActionsMaxWidth,\n    bulkActionsOffsetLeft,\n    computeTableDimensions\n  } = useIsBulkActionsSticky(selectMode);\n  useEffect(() => {\n    computeTableDimensions();\n  }, [computeTableDimensions, itemCount]);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      var _scrollContainerEleme, _tableElement$current;\n\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(((_scrollContainerEleme = scrollContainerElement.current) === null || _scrollContainerEleme === void 0 ? void 0 : _scrollContainerEleme.offsetWidth) === ((_tableElement$current = tableElement.current) === null || _tableElement$current === void 0 ? void 0 : _tableElement$current.offsetWidth));\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1; // Don't consider the last column in the calculations if it's not sticky\n\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0; // Secure some space for the remaining columns to be visible\n\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur;\n\n    // hide the scrollbar when resizing\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['duration-100'], 10),\n    nodeRef: loadingElement,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel,\n    ref: loadingElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount;\n  const bulkActionClassNames = classNames(styles.BulkActionsWrapper, isBulkActionsSticky && styles.BulkActionsWrapperSticky);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const bulkActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n    className: bulkActionClassNames,\n    style: {\n      insetBlockStart: isBulkActionsSticky ? undefined : bulkActionsAbsoluteOffset,\n      width: bulkActionsMaxWidth,\n      insetInlineStart: isBulkActionsSticky ? bulkActionsOffsetLeft : undefined\n    }\n  }, /*#__PURE__*/React.createElement(BulkActions, {\n    selectMode: selectMode,\n    promotedActions: promotedActions,\n    actions: actions,\n    onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n    isSticky: isBulkActionsSticky,\n    width: bulkActionsMaxWidth\n  })) : null;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsClassName = classNames(styles.SelectAllActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: selectAllActionsClassName\n    }, /*#__PURE__*/React.createElement(SelectAllActions, {\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction\n    }), loadingMarkup) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableColumnHeader\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = selectAllActionsMarkup !== null && selectAllActionsMarkup !== void 0 ? selectAllActionsMarkup : headerMarkup;\n    return stickyContent;\n  }), bulkActionsMarkup);\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const tableWrapperClassNames = classNames(styles.IndexTableWrapper, Boolean(bulkActionsMarkup) && selectMode && styles.IndexTableWrapperWithBulkActions);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: tableWrapperClassNames,\n    ref: tableMeasurerRef\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), /*#__PURE__*/React.createElement(\"div\", {\n    ref: bulkActionsIntersectionRef\n  })), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value === true);\n    const headingContentClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function handleSortHeadingClick(index, direction) {\n    onSort === null || onSort === void 0 ? void 0 : onSort(index, direction);\n  }\n\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(Text, {\n        variant: \"bodySm\",\n        as: \"span\",\n        visuallyHidden: true\n      }, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    if (sortable !== null && sortable !== void 0 && sortable[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = defaultSortDirection;\n      let SourceComponent = defaultSortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: styles.TableHeadingSortButton,\n        tabIndex: selectMode ? -1 : 0\n      }, iconMarkup, headingContent);\n\n      if (!sortToggleLabels || selectMode) {\n        return sortMarkup;\n      }\n\n      const tooltipDirection = isCurrentlySorted ? sortDirection : defaultSortDirection;\n      const tooltipContent = sortToggleLabels[index][tooltipDirection];\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: tooltipContent,\n        activatorWrapper: \"div\"\n      }, sortMarkup);\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n\n    const customActionText = paginatedSelectAllActionText !== null && paginatedSelectAllActionText !== void 0 ? paginatedSelectAllActionText : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\n\nconst isBreakpointsXS = () => {\n  var _toPx;\n\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat((_toPx = toPx(tokens.breakpoints['breakpoints-sm'])) !== null && _toPx !== void 0 ? _toPx : '');\n};\n\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n\n  return '';\n}\n\nfunction IndexTable({\n  children,\n  selectable = true,\n  itemCount,\n  selectedItemsCount = 0,\n  resourceName: passedResourceName,\n  loading,\n  hasMoreItems,\n  condensed,\n  onSelectionChange,\n  ...indexTableBaseProps\n}) {\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\n\nexport { IndexTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}